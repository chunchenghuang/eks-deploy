name: Terraform Deploy

on:
  workflow_dispatch: # This makes the workflow trigger manually
    inputs:
      region:
        description: 'AWS Region'
        required: true
        default: 'ap-east-1'
      approval_required: # Optional input for approval
        description: 'Require approval before apply (true/false)'
        type: boolean
        default: false

jobs:
  approval:
    name: Approval
    if: github.event.inputs.approval_required == true
    runs-on: ubuntu-latest
    steps:
      - name: Manual Approval Check
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            core.setFailed('Approval required. Please review the plan and approve.');

  deploy:
    runs-on: ubuntu-latest
    needs: [approval]
    if: always() && (needs.approval.result == 'success' || github.event.inputs.approval_required != true)
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

    #   - name: Configure AWS credentials
    #     uses: aws-actions/configure-aws-credentials@v2
    #     with:
    #       role-to-assume: ${{ secrets.AWS_ROLE_ARN }} # Recommended: Use IAM role
    #       role-session-name: GitHubActionSession
    #       aws-region: ${{ secrets.AWS_REGION }}

    # Configure AWS Credential
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
            aws-access-key-id: ${{ secrets.ACCESS_KEY }}
            aws-secret-access-key: ${{ secrets.ACCESS_KEY_SECRET }}
            aws-region: ${{ github.event.inputs.region}}

      - name: Assume AWS Role
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: GitHubActionSession
          aws-region: ${{ github.event.inputs.region}}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        run: terraform apply -auto-approve